package fr.lernejo.navy_battle;

import org.junit.jupiter.api.Assertions;

import fr.lernejo.navy_battle.handlers.HandleFire;
import fr.lernejo.navy_battle.handlers.HandlePing;
import fr.lernejo.navy_battle.handlers.HandleStart;
import fr.lernejo.navy_battle.utils.HttpParser;

class SampleTest {

    @org.junit.jupiter.api.Test
    void op() {
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));
        Assertions.assertEquals(HttpParser.queryToMap(null), null);
        Assertions.assertNotNull((new HandlePing()).pingHandler());
        Assertions.assertNotNull((new HandleFire()).fireHandler(null));
        Assertions.assertNull((new HandleStart()).startHandler(null));

    }

}
